{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\TiPiOh-fashionSNS\\\\TiPiOh_B\\\\Register\\\\RegisterEmail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport firebase from \"firebase\";\nimport 'firebase/firestore';\nimport FirebaseError from \"../FirebaseError\";\n\nvar RegisterEmail = function (_React$Component) {\n  _inherits(RegisterEmail, _React$Component);\n\n  var _super = _createSuper(RegisterEmail);\n\n  function RegisterEmail() {\n    var _this;\n\n    _classCallCheck(this, RegisterEmail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      errorMessage: null\n    };\n\n    _this.handleSignUp = function () {\n      firebase.auth().fetchSignInMethodsForEmail(_this.state.email).then(function (providers) {\n        if (providers.length == 0) {\n          if (_this.state.password == '') _this.setState({\n            errorMessage: \"비밀번호를 확인해주세요.\"\n          });else if (_this.state.password.length < 6) _this.setState({\n            errorMessage: \"비밀번호는 6자리 이상이어야 합니다.\"\n          });else if (_this.state.password != _this.state.passwordConfirm) _this.setState({\n            errorMessage: \"비밀번호와 비밀번호 확인이 일치하지 않습니다.\"\n          });else _this.props.navigation.navigate(\"RegisterProfile\", {\n            email: _this.state.email,\n            password: _this.state.password\n          });\n        } else _this.setState({\n          errorMessage: \"이미 존재하는 이메일입니다.\"\n        });\n      }).catch(function (error) {\n        return _this.setState({\n          errorMessage: FirebaseError(error.code)\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterEmail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"Email Address\"), React.createElement(TextInput, {\n        style: styles.loginInfo,\n        autoCapitalize: \"none\",\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, \"Password\"), React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.loginTopBox,\n        autoCapitalize: \"none\",\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.loginBottomBox,\n        autoCapitalize: \"none\",\n        placeholder: \"Password Confirm\",\n        onChangeText: function onChangeText(passwordConfirm) {\n          return _this2.setState({\n            passwordConfirm: passwordConfirm\n          });\n        },\n        value: this.state.passwordConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }), this.state.errorMessage && React.createElement(Text, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, this.state.errorMessage), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        title: \"\\uB2E4\\uC74C\",\n        color: \"skyblue\",\n        onPress: this.handleSignUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }), React.createElement(Button, {\n        title: \"Already have an account? Login\",\n        color: \"skyblue\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Login');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return RegisterEmail;\n}(React.Component);\n\nexport { RegisterEmail as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 30,\n    marginTop: 40,\n    fontWeight: \"700\"\n  },\n  loginInfo: {\n    height: 40,\n    width: \"80%\",\n    backgroundColor: \"#cccccc\",\n    textAlign: \"center\",\n    borderRadius: 7,\n    marginTop: 30\n  },\n  loginTopBox: {\n    height: 40,\n    width: \"80%\",\n    backgroundColor: \"#cccccc\",\n    textAlign: \"center\",\n    borderBottomWidth: 0.5,\n    borderColor: \"grey\",\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    marginTop: 30\n  },\n  loginBottomBox: {\n    height: 40,\n    width: \"80%\",\n    backgroundColor: \"#cccccc\",\n    textAlign: \"center\",\n    borderTopWidth: 0.5,\n    borderColor: \"grey\",\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10\n  },\n  button: {\n    width: \"80%\",\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["C:/TiPiOh-fashionSNS/TiPiOh_B/Register/RegisterEmail.js"],"names":["React","firebase","FirebaseError","RegisterEmail","state","email","password","passwordConfirm","errorMessage","handleSignUp","auth","fetchSignInMethodsForEmail","then","providers","length","setState","props","navigation","navigate","catch","error","code","styles","container","text","loginInfo","loginTopBox","loginBottomBox","color","button","Component","StyleSheet","create","flex","alignItems","fontSize","marginTop","fontWeight","height","width","backgroundColor","textAlign","borderRadius","borderBottomWidth","borderColor","borderTopLeftRadius","borderTopRightRadius","borderTopWidth","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,OAAOC,aAAP;;IAEqBC,a;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE,EAAvB;AAA2BC,MAAAA,eAAe,EAAE,EAA5C;AAAgDC,MAAAA,YAAY,EAAE;AAA9D,K;;UAERC,Y,GAAe,YAAM;AACjBR,MAAAA,QAAQ,CACHS,IADL,GAEKC,0BAFL,CAEgC,MAAKP,KAAL,CAAWC,KAF3C,EAGKO,IAHL,CAGU,UAACC,SAAD,EACN;AAEI,YAAGA,SAAS,CAACC,MAAV,IAAoB,CAAvB,EACA;AACI,cAAG,MAAKV,KAAL,CAAWE,QAAX,IAAuB,EAA1B,EACI,MAAKS,QAAL,CAAc;AAACP,YAAAA,YAAY,EAAE;AAAf,WAAd,EADJ,KAEK,IAAG,MAAKJ,KAAL,CAAWE,QAAX,CAAoBQ,MAApB,GAA6B,CAAhC,EACD,MAAKC,QAAL,CAAc;AAACP,YAAAA,YAAY,EAAE;AAAf,WAAd,EADC,KAEA,IAAG,MAAKJ,KAAL,CAAWE,QAAX,IAAuB,MAAKF,KAAL,CAAWG,eAArC,EACD,MAAKQ,QAAL,CAAc;AAACP,YAAAA,YAAY,EAAE;AAAf,WAAd,EADC,KAGD,MAAKQ,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,iBAA/B,EACI;AACIb,YAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KADtB;AAEIC,YAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE;AAFzB,WADJ;AAKP,SAdD,MAgBI,MAAKS,QAAL,CAAc;AAAEP,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACP,OAvBL,EAwBKW,KAxBL,CAwBW,UAAAC,KAAK;AAAA,eAAI,MAAKL,QAAL,CAAc;AAAEP,UAAAA,YAAY,EAAEN,aAAa,CAACkB,KAAK,CAACC,IAAP;AAA7B,SAAd,CAAJ;AAAA,OAxBhB;AAyBH,K;;;;;;;6BAEO;AAAA;;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEF,MAAM,CAACG,SADlB;AAEI,QAAA,cAAc,EAAC,MAFnB;AAGI,QAAA,WAAW,EAAC,OAHhB;AAII,QAAA,YAAY,EAAE,sBAAApB,KAAK;AAAA,iBAAI,MAAI,CAACU,QAAL,CAAc;AAAEV,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAJ;AAAA,SAJvB;AAKI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEiB,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,EAUI,oBAAC,SAAD;AACI,QAAA,eAAe,MADnB;AAEI,QAAA,KAAK,EAAEF,MAAM,CAACI,WAFlB;AAGI,QAAA,cAAc,EAAC,MAHnB;AAII,QAAA,WAAW,EAAC,UAJhB;AAKI,QAAA,YAAY,EAAE,sBAAApB,QAAQ;AAAA,iBAAI,MAAI,CAACS,QAAL,CAAc;AAAET,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAJ;AAAA,SAL1B;AAMI,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,QANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAkBI,oBAAC,SAAD;AACI,QAAA,eAAe,MADnB;AAEI,QAAA,KAAK,EAAEgB,MAAM,CAACK,cAFlB;AAGI,QAAA,cAAc,EAAC,MAHnB;AAII,QAAA,WAAW,EAAC,kBAJhB;AAKI,QAAA,YAAY,EAAE,sBAAApB,eAAe;AAAA,iBAAI,MAAI,CAACQ,QAAL,CAAc;AAAER,YAAAA,eAAe,EAAfA;AAAF,WAAd,CAAJ;AAAA,SALjC;AAMI,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,eANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EA0BK,KAAKH,KAAL,CAAWI,YAAX,IACD,oBAAC,IAAD;AAAM,QAAA,KAAK,EACP;AAAEoB,UAAAA,KAAK,EAAE;AAAT,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGK,KAAKxB,KAAL,CAAWI,YAHhB,CA3BJ,EAgCI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEc,MAAM,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,cADV;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,OAAO,EAAE,KAAKpB,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,gCADV;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACO,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B,CAAN;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAhCJ,CADJ;AAgDH;;;;EAhFsClB,KAAK,CAAC8B,S;;SAA5B3B,a;AAmFrB,IAAMmB,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,IAAI,EAAG,CADA;AAEPC,IAAAA,UAAU,EAAE;AAFL,GADkB;AAK7BV,EAAAA,IAAI,EAAE;AACFW,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,SAAS,EAAE,EAFT;AAGFC,IAAAA,UAAU,EAAE;AAHV,GALuB;AAU7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,KAAK,EAAE,KAFA;AAGPC,IAAAA,eAAe,EAAE,SAHV;AAIPC,IAAAA,SAAS,EAAE,QAJJ;AAKPC,IAAAA,YAAY,EAAE,CALP;AAMPN,IAAAA,SAAS,EAAE;AANJ,GAVkB;AAkB7BV,EAAAA,WAAW,EAAE;AACTY,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,KAAK,EAAE,KAFE;AAGTC,IAAAA,eAAe,EAAE,SAHR;AAITC,IAAAA,SAAS,EAAE,QAJF;AAKTE,IAAAA,iBAAiB,EAAE,GALV;AAMTC,IAAAA,WAAW,EAAG,MANL;AAOTC,IAAAA,mBAAmB,EAAG,EAPb;AAQTC,IAAAA,oBAAoB,EAAG,EARd;AASTV,IAAAA,SAAS,EAAE;AATF,GAlBgB;AA6B7BT,EAAAA,cAAc,EAAE;AACZW,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,KAAK,EAAE,KAFK;AAGZC,IAAAA,eAAe,EAAE,SAHL;AAIZC,IAAAA,SAAS,EAAE,QAJC;AAKZM,IAAAA,cAAc,EAAE,GALJ;AAMZH,IAAAA,WAAW,EAAG,MANF;AAOZI,IAAAA,sBAAsB,EAAG,EAPb;AAQZC,IAAAA,uBAAuB,EAAG;AARd,GA7Ba;AAuC7BpB,EAAAA,MAAM,EAAE;AACJU,IAAAA,KAAK,EAAE,KADH;AAEJH,IAAAA,SAAS,EAAG;AAFR;AAvCqB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {StyleSheet, Text, View, TouchableOpacity, TextInput, Button, KeyboardAvoidingView} from \"react-native\";\r\nimport firebase from \"firebase\";\r\nimport 'firebase/firestore';\r\nimport FirebaseError from \"../FirebaseError\";\r\n\r\nexport default class RegisterEmail extends React.Component{\r\n    state = { email: '', password: '', passwordConfirm: '', errorMessage: null }\r\n\r\n    handleSignUp = () => {\r\n        firebase\r\n            .auth()\r\n            .fetchSignInMethodsForEmail(this.state.email)\r\n            .then((providers) =>\r\n            {\r\n                // 중복되지 않은 이메일\r\n                if(providers.length == 0)\r\n                {\r\n                    if(this.state.password == '')\r\n                        this.setState({errorMessage: \"비밀번호를 확인해주세요.\"})\r\n                    else if(this.state.password.length < 6)\r\n                        this.setState({errorMessage: \"비밀번호는 6자리 이상이어야 합니다.\"})\r\n                    else if(this.state.password != this.state.passwordConfirm)\r\n                        this.setState({errorMessage: \"비밀번호와 비밀번호 확인이 일치하지 않습니다.\"})\r\n                    else\r\n                        this.props.navigation.navigate(\"RegisterProfile\",\r\n                            {\r\n                                email: this.state.email,\r\n                                password: this.state.password\r\n                            })\r\n                }\r\n                else\r\n                    this.setState({ errorMessage: \"이미 존재하는 이메일입니다.\"});\r\n            })\r\n            .catch(error => this.setState({ errorMessage: FirebaseError(error.code) }))\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.text}>Email Address</Text>\r\n                <TextInput\r\n                    style={styles.loginInfo}\r\n                    autoCapitalize=\"none\"\r\n                    placeholder=\"Email\"\r\n                    onChangeText={email => this.setState({ email })}\r\n                    value={this.state.email}\r\n                />\r\n                <Text style={styles.text}>Password</Text>\r\n                <TextInput\r\n                    secureTextEntry\r\n                    style={styles.loginTopBox}\r\n                    autoCapitalize=\"none\"\r\n                    placeholder=\"Password\"\r\n                    onChangeText={password => this.setState({ password })}\r\n                    value={this.state.password}\r\n                />\r\n                <TextInput\r\n                    secureTextEntry\r\n                    style={styles.loginBottomBox}\r\n                    autoCapitalize=\"none\"\r\n                    placeholder=\"Password Confirm\"\r\n                    onChangeText={passwordConfirm => this.setState({ passwordConfirm })}\r\n                    value={this.state.passwordConfirm}\r\n                />\r\n                {this.state.errorMessage &&\r\n                <Text style={\r\n                    { color: 'red' }\r\n                }>\r\n                    {this.state.errorMessage}\r\n                </Text>}\r\n                <View style={styles.button}>\r\n                    <Button\r\n                        title=\"다음\"\r\n                        color=\"skyblue\"\r\n                        onPress={this.handleSignUp}\r\n                    >\r\n                    </Button>\r\n                    <Button\r\n                        title=\"Already have an account? Login\"\r\n                        color=\"skyblue\"\r\n                        onPress={() => this.props.navigation.navigate('Login')}\r\n                    />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex : 1,\r\n        alignItems: \"center\"\r\n    },\r\n    text: {\r\n        fontSize: 30,\r\n        marginTop: 40,\r\n        fontWeight: \"700\"\r\n    },\r\n    loginInfo: {\r\n        height: 40,\r\n        width: \"80%\",\r\n        backgroundColor: \"#cccccc\",\r\n        textAlign: \"center\",\r\n        borderRadius: 7,\r\n        marginTop: 30\r\n    },\r\n    loginTopBox: {\r\n        height: 40,\r\n        width: \"80%\",\r\n        backgroundColor: \"#cccccc\",\r\n        textAlign: \"center\",\r\n        borderBottomWidth: 0.5,\r\n        borderColor : \"grey\",\r\n        borderTopLeftRadius : 10,\r\n        borderTopRightRadius : 10,\r\n        marginTop: 30\r\n    },\r\n    loginBottomBox: {\r\n        height: 40,\r\n        width: \"80%\",\r\n        backgroundColor: \"#cccccc\",\r\n        textAlign: \"center\",\r\n        borderTopWidth: 0.5,\r\n        borderColor : \"grey\",\r\n        borderBottomLeftRadius : 10,\r\n        borderBottomRightRadius : 10\r\n    },\r\n    button: {\r\n        width: \"80%\",\r\n        marginTop : 30\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}