{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TiPiOh-fashionSNS\\\\TiPiOh_B\\\\Register\\\\ImageUploader.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'expo-image-picker';\nexport default function ImageUploader() {\n  var _useState = useState('https://mblogthumb-phinf.pstatic.net/MjAyMDAyMDdfMTYw/MDAxNTgxMDg1NzUxMTUy.eV1iEw2gk2wt_YqPWe5F7SroOCkXJy2KFwmTDNzM0GQg.Z3Kd5MrDh07j86Vlb2OhAtcw0oVmGCMXtTDjoHyem9og.JPEG.7wayjeju/%EB%B0%B0%EC%9A%B0%ED%94%84%EB%A1%9C%ED%95%84%EC%82%AC%EC%A7%84_IMG7117.jpg?type=w800'),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 2:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('카메라 접근을 허용해주세요!');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [3, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: styles.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\",\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\"\n  },\n  circle: {\n    width: 150,\n    height: 150,\n    backgroundColor: \"white\",\n    marginTop: 40,\n    borderRadius: 75,\n    borderWidth: 5,\n    borderColor: \"darkgrey\"\n  },\n  button: {\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/TiPiOh-fashionSNS/TiPiOh_B/Register/ImageUploader.js"],"names":["React","useState","useEffect","ImagePicker","ImageUploader","image","setImage","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","console","log","cancelled","uri","styles","container","circle","button","StyleSheet","create","alignItems","width","height","backgroundColor","marginTop","borderRadius","borderWidth","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA,kBACZH,QAAQ,CAAC,0QAAD,CADI;AAAA;AAAA,MAC/BI,KAD+B;AAAA,MACxBC,QADwB;;AAGtCJ,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC0BC,WAAW,CAACI,mCAAZ,EAD1B;;AAAA;AAAA;AACSC,cAAAA,MADT,yBACSA,MADT;;AAEC,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBC,gBAAAA,KAAK,CAAC,iBAAD,CAAL;AACD;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGP,WAAW,CAACQ,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAET,WAAW,CAACU,gBAAZ,CAA6BC,MADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CADH;;AAAA;AACZC,YAAAA,MADY;AAQhBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,gBAAI,CAACA,MAAM,CAACG,SAAZ,EAAuB;AACrBf,cAAAA,QAAQ,CAACY,MAAM,CAACI,GAAR,CAAR;AACD;;AAZe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAeA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEiB,MAAAA,GAAG,EAAEjB;AAAP,KAAf;AAA+B,IAAA,KAAK,EAAEkB,MAAM,CAACE,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,uCAAd;AAAwB,IAAA,OAAO,EAAEhB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AASD;AAED,IAAMa,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,UAAU,EAAE;AADH,GADkB;AAI7BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,MAAM,EAAE,GAFF;AAGNC,IAAAA,eAAe,EAAG,OAHZ;AAINC,IAAAA,SAAS,EAAE,EAJL;AAKNC,IAAAA,YAAY,EAAE,EALR;AAMNC,IAAAA,WAAW,EAAE,CANP;AAONC,IAAAA,WAAW,EAAE;AAPP,GAJqB;AAa7BV,EAAAA,MAAM,EAAE;AACNO,IAAAA,SAAS,EAAE;AADL;AAbqB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Image, View, StyleSheet } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default function ImageUploader() {\r\n  const [image, setImage] = useState('https://mblogthumb-phinf.pstatic.net/MjAyMDAyMDdfMTYw/MDAxNTgxMDg1NzUxMTUy.eV1iEw2gk2wt_YqPWe5F7SroOCkXJy2KFwmTDNzM0GQg.Z3Kd5MrDh07j86Vlb2OhAtcw0oVmGCMXtTDjoHyem9og.JPEG.7wayjeju/%EB%B0%B0%EC%9A%B0%ED%94%84%EB%A1%9C%ED%95%84%EC%82%AC%EC%A7%84_IMG7117.jpg?type=w800');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        alert('카메라 접근을 허용해주세요!');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [3, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {image && <Image source={{ uri: image }} style={styles.circle} />}\r\n      <View style={styles.button}>\r\n        <Button title=\"이미지 업로드\" onPress={pickImage} />\r\n      </View>\r\n      \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      alignItems: \"center\"\r\n    },\r\n    circle: {\r\n      width: 150,\r\n      height: 150,\r\n      backgroundColor : \"white\",\r\n      marginTop: 40,\r\n      borderRadius: 75,\r\n      borderWidth: 5,\r\n      borderColor: \"darkgrey\"\r\n    },\r\n    button: {\r\n      marginTop: 10\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}